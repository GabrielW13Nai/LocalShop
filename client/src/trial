{/* <button className="statistics" onClick={statistics}>Statistics</button>
<button className="payment-status" onClick={status}>Status of payment</button>
<button className="product-info" onClick={product_info}>Product Information</button>
<button className="clerk-info" onClick={clerk_info}>Clerk Information</button>
<button className="query-items"onClick={query_items}>Query Items</button> */}


{statistics, status, product_info, clerk_info, query_items}


<Navigation statistics={<Statistics />} status={<Status />} product_info={<ProductInfo />} clerk_info={<ClerkInfo />}query_items= {<QueryItems />} />

   const[statistics, setStatistics] = useState(false)
    const[paymentStatus, setPaymentStatus] = useState(false)
    const[productInfo, setProductInfo] = useState(false)
    const[clerkInfo, setClerkInfo] = useState(false)
    const[queryItems, setQueryItems] = useState(false)



    const handleStatistics = ()=> {
        setStatistics(current=> !current)
    }
    const handlePaymentStatus = ()=> {
        setPaymentStatus(current=> !current)
    }
    const handleProductInfo = ()=> {
        setProductInfo(current=> !current)
    }
    const handleClerkInfo = ()=> {
        setClerkInfo(current=> !current)
    }
    const handleQueryItems = ()=> {
        setQueryItems(current=> !current)
    }

import { useState } from "react";


    return(
        <div className="btn-ctn-nvgtn">
            <button className="statistics" onClick={handleStatistics}>Statistics</button>
            <div className="statistics">
            {statistics && <Statistics />}
            </div>
            <button className="payment-status" onClick={handlePaymentStatus} >Status of payment</button>
            <div className="statistics">
            {paymentStatus && <PaymentStatus />}
            </div>
            <button className="product-info" onClick={handleProductInfo}>Product Information</button>
            <div className="statistics">
            {productInfo && <ProductInfo />}
            </div>
            <button className="clerk-info" onClick={handleClerkInfo}>Clerk Information</button>
            <div className="statistics">
            {clerkInfo && <ClerkInfo />}
            </div>
            <button className="query-items" onClick={handleQueryItems}>Query Items</button>
            <div className="statistics">
            {queryItems && <QueryItems />}
            </div>

        </div>
    )



    const[name, setName]= useState(" ")
    const[admin_id, setAdminId]= useState(" ")
    const[admins, setAdmin]= useState([])

    const clerk = {
        name,
        admin_id
    }

    useEffect(()=> {
        fetch('/admins')
        .then(res=> res.json())
        .then((clerk=> setAdmin(clerk)))
    }, [])

    function handleAdd(e){
        e.preventDefault();
        fetch('/clerks',{
            method: "POST",
            headers: {"Content-Type":"application/json"},
            body: JSON.stringify(clerk)})
        .then(res=> res.json())
        .then(clerk=> console.log(clerk))
    }

    return (
        <>

        <div className="clerk-information">
            <div className="clerk-add">
               <form onSubmit={handleAdd} className="add-clerk">
                    <h1 className="clerk-information-title" >Clerk Information</h1>
                    <label htmlFor="Add Clerk" className="textbox-clerk">Clerk Name</label> &nbsp;&nbsp;
                    <input
                    type="text"
                    onChange={e=> setName(e.target.value)}
                    className="textbox-clerk"
                    value={clerk.name}
                    ></input> <br></br>
                     <label htmlFor="Add Clerk" className="textbox-clerk">Admin Name</label>&nbsp;

                        <select className="textbox-clerk"  value={clerk.id} onChange={e=> setAdminId(e.target.value)}>
                        {admins.map(admin=>{
                            return(
                            <>
                                <option key={admin.id} value={admin.id}>{admin.name}</option>
                            </>
                            )
                            })}
                        </select> <br></br>
                    <div className="buttons">
                        <button className="btn-clerk" type="submit">Add clerk</button>
                    </div>

               </form>
            </div>
            <div className="clerk-add">
            </div>


            // const clerk = {
    //     name,
    //     admin_id
    // }

    // useEffect(()=> {
    //     fetch('/admins')
    //     .then(res=> res.json())
    //     .then((clerk=> setAdmin(clerk)))
    // }, [])

    // function handleEdit(e){
    //     e.preventDefault();
    //     fetch('/clerks',{
    //         method: "PATCH",
    //         headers: {"Content-Type":"application/json"},
    //         body: JSON.stringify(clerk)})
    //     .then(res=> res.json())
    //     .then(clerk=> console.log(clerk))
    // }




            // <textarea
            // rows={5}
            // columns={6}
            // type="text"
            // className="input"
            // aria-label="Field name"
            // onChange={handleChange}
            // onKeyDown={onKeyDown}
            // onBlur={onBlur}
            // value={value}
            // />


             // const[name, setName]= useState(" ")
    // const[admin_id, setAdminId]= useState(" ")

    // const[value, setValue] = useState();

    // const handleChange = (e) => {
    //     setValue(e.target.value)
    // }
    // const onKeyDown = (e) => {
    //     if(e.key === "Enter" || e.key === "Escape"){
    //         e.target.blur();
    //     }
    // }

    // const onBlur = (e) => {
    //     setValue(e.target.value)
    // }
         {/* <label htmlFor="Add Clerk" className="textbox-clerk">Admin Name</label>&nbsp; */}
{/*
                        <select className="textbox-clerk" value={clerk.role_id} onChange={e=> setId(e.target.value)}>
                        {users.map(user=>{
                            if(user.name!=="Clerk") return null;

                            return (
                                   <>
                                        <option key={user.id} defaultValue={user.id} selected>{user.name}</option>
                                    </>
                                )
                            })}
                        </select> <br></br> */}
                        const [users, setUsers] = useState([])



                        useEffect(()=>{
                            fetch('/users')
                            .then(res=> res.json())
                            .then(user=> setUsers(user))
                        },[])

                        import * as React from 'react';
import Button from '@mui/material/Button';
import Stack from '@mui/material/Stack';

export default function ContainedButtons() {
  return (
    <Stack direction="row" spacing={2}>
      <Button variant="contained">Contained</Button>
      <Button variant="contained" disabled>
        Disabled
      </Button>
      <Button variant="contained" href="#contained-buttons">
        Link
      </Button>
    </Stack>
  );
}

// const [formObj, setFormObj] = useState(
    //    defaultValue || {
    //     id:"",
    //     name: "",
    //     email: "",
    //     phone_number: ""
    // })
